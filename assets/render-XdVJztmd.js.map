{"version":3,"file":"render-XdVJztmd.js","sources":["../../src/lib/createObserver.js","../../src/lib/createStore.js","../../src/lib/createStorage.js","../../src/lib/createVNode.js","../../src/lib/eventManager.js","../../src/lib/createElement.js","../../src/lib/normalizeVNode.js","../../src/lib/updateElement.js","../../src/lib/renderElement.js","../../src/utils/timeUtils.js","../../src/components/posts/Post.jsx","../../src/components/posts/PostForm.jsx","../../src/components/templates/Header.jsx","../../src/components/templates/Footer.jsx","../../src/router.js","../../src/storages/userStorage.js","../../src/stores/globalStore.js","../../src/components/templates/Navigation.jsx","../../src/pages/HomePage.jsx","../../src/pages/LoginPage.jsx","../../src/pages/NotFoundPage.jsx","../../src/pages/ProfilePage.jsx","../../src/errors/ForbiddenError.js","../../src/errors/UnauthorizedError.js","../../src/render.jsx"],"sourcesContent":["export const createObserver = () => {\r\n  const listeners = new Set();\r\n  const subscribe = (fn) => listeners.add(fn);\r\n  const notify = () => listeners.forEach((listener) => listener());\r\n\r\n  return { subscribe, notify };\r\n};\r\n","import { createObserver } from \"./createObserver.js\";\r\n\r\nexport const createStore = (initialState, initialActions) => {\r\n  const { subscribe, notify } = createObserver();\r\n\r\n  let state = { ...initialState };\r\n\r\n  const setState = (newState) => {\r\n    state = { ...state, ...newState };\r\n    notify();\r\n  };\r\n\r\n  const getState = () => ({ ...state });\r\n\r\n  const actions = Object.fromEntries(\r\n    Object.entries(initialActions).map(([key, value]) => [\r\n      key,\r\n      (...args) => setState(value(getState(), ...args)),\r\n    ]),\r\n  );\r\n\r\n  return { getState, setState, subscribe, actions };\r\n};\r\n","export const createStorage = (key, storage = window.localStorage) => {\r\n  const get = () => JSON.parse(storage.getItem(key));\r\n  const set = (value) => storage.setItem(key, JSON.stringify(value));\r\n  const reset = () => storage.removeItem(key);\r\n\r\n  return { get, set, reset };\r\n};\r\n","/**\n * 1. type, props, ...children을 매개변수로 받는 함수를 작성하세요.\n * 2. 반환값은 { type, props, children } 형태의 객체여야 합니다.\n * @param {*} type\n * @param {*} props\n * @param  {...any} children\n * @returns\n */\nexport function createVNode(type, props, ...children) {\n  const flatChildren = [...children].flat(Infinity);\n  // children 중 조건부 렌더링이 있는 경우 false, undefined, null 값 제외\n  const filteredChildren = flatChildren.filter(\n    (item) => item !== false && item !== undefined && item !== null,\n  );\n\n  return {\n    type: type,\n    props: props,\n    children: filteredChildren,\n  };\n}\n","const eventStore = new Map();\nconst rootStore = new Map();\n\nexport function setupEventListeners(root) {\n  if (eventStore.size < 1) return;\n\n  Array.from(eventStore.entries()).forEach(([eventType]) => {\n    const depthMap = eventStore.get(eventType);\n    Array.from(depthMap.entries()).forEach(([element, handler]) => {\n      // root.addEventListener(eventType, handler)\n      if (rootStore.get(element)?.has(handler)) {\n        return;\n      }\n      const eventHandler = (e) => {\n        if (element === e.target) {\n          handler(e);\n        }\n      };\n      root.addEventListener(eventType, eventHandler);\n      let rootDepthMap = rootStore.get(element);\n\n      if (!rootDepthMap) {\n        rootDepthMap = new Map();\n        rootStore.set(element, rootDepthMap);\n      }\n      // rootDepthMap.set(handler, root);\n      rootDepthMap.set(handler, { root, eventHandler });\n    });\n  });\n}\n\n// event 를 저장하는데 어떤 event 인지 특정해줘야 함\n// element 가 파라미터로 넘어오니까 해당 element도 어딘가에 저장해야됨.\nexport function addEvent(element, eventType, handler) {\n  // eventType 을 key로 새로운 newMap을 만들고\n  // 거기에 element와 handler로 넣자.\n  let depthMap = eventStore.get(eventType);\n  if (!depthMap) {\n    depthMap = new Map();\n    eventStore.set(eventType, depthMap);\n  }\n\n  depthMap.set(element, handler);\n}\n\nexport function removeEvent(element, eventType, handler) {\n  const depthMap = eventStore.get(eventType);\n  depthMap.delete(element);\n\n  const rootData = rootStore.get(element);\n  if (rootData) {\n    const { root, eventHandler } = rootData.get(handler);\n    root.removeEventListener(eventType, eventHandler); // eventHandler를 사용하여 제거\n  }\n}\n\n// // key: 이벤트 타입 (ex.click)\n// // value: WeakMap (key: event target , value: handler)\n// const eventHandlers = new Map();\n\n// export function setupEventListeners(root) {\n//   if (!root) return;\n\n//   if (!root.__rootEvents) {\n//     root.__rootEvents = new Set();\n//   }\n\n//   for (const [eventType, eventMap] of eventHandlers.entries()) {\n//     if (root.__rootEvents.has(eventType)) continue;\n\n//     root.addEventListener(eventType, (e) => {\n//       let targetElement = e.target;\n\n//       // 핸들러 하위 요소에 액션을 했을 경우\n//       while (targetElement && targetElement !== root.parentNode) {\n//         const handler = eventMap.get(targetElement);\n\n//         if (handler) {\n//           handler(e);\n\n//           break;\n//         }\n\n//         targetElement = targetElement.parentNode;\n//       }\n//     });\n\n//     root.__rootEvents.add(eventType);\n//   }\n// }\n\n// export function addEvent(element, eventType, handler) {\n//   if (!element || !eventType || !handler) return;\n\n//   let eventMap = eventHandlers.get(eventType);\n\n//   if (!eventMap) {\n//     eventMap = new WeakMap();\n//     eventHandlers.set(eventType, eventMap);\n//   }\n\n//   eventMap.set(element, handler);\n// }\n\n// export function removeEvent(element, eventType, handler) {\n//   if (!element || !eventType || !handler) return;\n\n//   const eventMap = eventHandlers.get(eventType);\n\n//   if (eventMap && eventMap.get(element) === handler) {\n//     eventMap.delete(element);\n//   }\n// }\n","import { addEvent } from \"./eventManager\";\n\n/**\n * 1. vNode가 null, undefined, boolean일 경우, 빈 텍스트 노드를 반환합니다.\n * 2. vNode가 문자열이나 숫자면 텍스트 노드를 생성하여 반환합니다.\n * 3. vNode가 배열이면 DocumentFragment를 생성하고 각 자식에 대해\n * createElement를 재귀 호출하여 추가합니다.\n * 4. 위 경우가 아니면 실제 DOM 요소를 생성합니다.\n * @param {*} vNode\n */\nexport function createElement(vNode) {\n  if (vNode === null || vNode === undefined || typeof vNode === \"boolean\") {\n    return document.createTextNode(\"\");\n  }\n  // string, number -> text node로 변환\n  if (typeof vNode === \"string\" || typeof vNode === \"number\") {\n    return document.createTextNode(String(vNode));\n  }\n\n  if (Array.isArray(vNode)) {\n    const $fragmenet = document.createDocumentFragment();\n    vNode.map((v) => {\n      const $el = document.createElement(v.type);\n\n      $fragmenet.appendChild($el);\n    });\n    return $fragmenet;\n  }\n\n  if (typeof vNode.type === \"function\") {\n    throw new Error(\n      \"컴포넌트를 createElement로 처리하려고 하면 오류가 발생한다\",\n    );\n  }\n\n  const { type, props, children } = vNode;\n  // vNode 가 컴포넌트인 경우.\n  const $el = document.createElement(type);\n  // $el에 속성값 주입\n  updateAttributes($el, props);\n\n  // childrend depth 없는 경우 return\n  if (!Array.isArray(children)) return;\n\n  children.forEach((child) => {\n    // 자식 컴포넌트도 element로 변환\n    const $child = createElement(child);\n    // $child에 속성값 주입.\n    updateAttributes($child, child?.props);\n    $el.appendChild($child);\n  });\n  return $el;\n}\n\nfunction updateAttributes($el, props) {\n  Object.entries(props || {}).forEach(([key, value]) => {\n    if (key.toLowerCase() === \"classname\") {\n      $el.setAttribute(\"class\", value);\n    } else if (key.startsWith(\"on\") && typeof value === \"function\") {\n      // const event = key.replace(/^on/i, \"\").toLowerCase();\n      const event = key.toLowerCase().slice(2);\n      addEvent($el, event, value);\n    } else {\n      $el.setAttribute(key, value);\n    }\n  });\n  return $el;\n}\n","// import { createVNode } from \"./createVNode\";\n\n/**\n * 주어진 가상 노드(vNode)를 표준화된 형태로 변환하는 역할을 합니다.\n * 이 함수는 다양한 타입의 입력을 처리하여 일관된 형식의 가상 노드를 반환하여\n * DOM 조작이나 렌더링 과정에서 일관된 데이터 구조를 사용할 수 있도록 합니다.\n * 1. vNode가 null, undefined, 또는 boolean 타입일 경우 빈 문자열을 반환합니다.\n * 2. vNode가 문자열 또는 숫자일 경우 문자열로 변환하여 반환합니다.\n * 3. vNode의 타입이 함수일 경우 해당 함수를 호출하여 반환된 결과를 재귀적으로 표준화합니다.\n * 4. 그 외의 경우, vNode의 자식 요소들을 재귀적으로 표준화하고, null 또는 undefined값을 필터링하여 반환합니다.\n * @param {*} vNode\n * @returns\n */ export function normalizeVNode(vNode) {\n  // vNode가 null, undefined 또는 boolean 타입일 경우 빈 문자열을 반환합니다.\n  if (vNode === null || vNode === undefined || typeof vNode === \"boolean\") {\n    return \"\";\n  }\n  // vNode가 문자열 또는 숫자일 경우 문자열로 변환하여 반환합니다.\n  if (typeof vNode === \"string\" || typeof vNode === \"number\") {\n    return String(vNode);\n  }\n  // vNode의 타입이 함수일 경우 해당 함수를 호출하여 반환된 결과를 재귀적으로 표준화합니다.\n  if (typeof vNode.type === \"function\") {\n    const props = { ...(vNode.props || {}), children: vNode.children };\n    return normalizeVNode(vNode.type(props));\n  }\n\n  // vNode.children이 배열이 아닐 경우 배열로 변환\n  let children = []; // vNode.children이 없을 경우 방지\n  if (vNode.children) {\n    children = Array.isArray(vNode.children)\n      ? vNode.children\n      : [vNode.children];\n  }\n\n  // 그 외의 경우, vNode의 자식 요소들을 재귀적으로 표준화하고, null 또는 undefined 값을 필터링하여 반환합니다.\n  const normalizedChildren = children\n    .map((child) => normalizeVNode(child))\n    .filter(\n      (child) =>\n        child !== \"\" &&\n        child !== null &&\n        child !== undefined &&\n        child !== false,\n    ); // Falsy 값 (null, undefined, false, 빈 문자열 \"\")을 필터링\n\n  return { ...vNode, children: normalizedChildren };\n}\n","import { addEvent, removeEvent } from \"./eventManager\";\nimport { createElement } from \"./createElement.js\";\n\n// newNode와 oldNode의 attribute를 비교하여 변경된 부분만 반영한다\nfunction updateAttributes(target, newProps, oldProps) {\n  // 달라지저나 추가된 props를 반영\n  for (const [attr, value] of Object.entries(newProps)) {\n    if (oldProps[attr] === newProps[attr]) continue;\n    if (attr.startsWith(\"on\") && typeof value === \"function\") {\n      const eventType = attr.toLowerCase().slice(2);\n      addEvent(target, eventType, value);\n    } else {\n      target.setAttribute(attr, value);\n    }\n  }\n\n  // 없어진 props를 attribute에서 제거.\n  for (const [attr, value] of Object.entries(oldProps)) {\n    if (newProps[attr] !== undefined) continue;\n\n    if (attr.startsWith(\"on\") && typeof value === \"function\") {\n      const eventType = attr.toLowerCase().slice(2);\n      removeEvent(target, eventType, value);\n    } else {\n      target.removeAttribute(attr);\n    }\n  }\n}\n\nexport function updateElement(parentElement, newNode, oldNode, index = 0) {\n  // if (!parentElement) return;\n  // 1. oldNode 만 있는 경우\n  if (!newNode && oldNode) {\n    // return parentElement.removeChild(parentElement.childNode[index]);\n    if (parentElement.childNodes[index]) {\n      return parentElement.removeChild(parentElement.childNodes[index]);\n    }\n    return;\n  }\n\n  // 2. newNode만 있는 경우\n  if (newNode && !oldNode) {\n    return parentElement.appendChild(createElement(newNode));\n  }\n\n  // 3.oldNode와 newNode 모두 text 타입일 경우\n  if (typeof newNode === \"string\" && typeof oldNode === \"string\") {\n    if (newNode === oldNode) return;\n    // return parentElement.replaceChild(\n    //   createElement(newNode),\n    //   parentElement.childNodes[index],\n    // );\n    if (parentElement.childNodes[index]) {\n      return parentElement.replaceChild(\n        createElement(newNode),\n        parentElement.childNodes[index],\n      );\n    }\n    return;\n  }\n\n  //4.oldNode와 newNode의 태그 이름(type)이 다를 경우\n  if (newNode.type !== oldNode.type) {\n    // return parentElement.replaceChild(\n    //   createElement(newNode),\n    //   parentElement.childNodes[index],\n    // );\n    if (parentElement.childNodes[index]) {\n      return parentElement.replaceChild(\n        createElement(newNode),\n        parentElement.childNodes[index],\n      );\n    }\n    return;\n  }\n\n  // 5.oldNode와 newNode의 태그 이름(type)이 같을 경우\n  updateAttributes(\n    parentElement.children[index],\n    newNode.props || {},\n    oldNode.props || {},\n  );\n\n  // 6. newNode와 oldNode의 모든 자식 태그를 순회하며 1~5 내용을 반복한다\n  const maxLength = Math.max(newNode.children.length, oldNode.children.length);\n  for (let i = 0; i < maxLength; i++) {\n    updateElement(\n      parentElement.childNodes[index],\n      newNode.children[i],\n      oldNode.children[i],\n      i,\n    );\n  }\n}\n","import { setupEventListeners } from \"./eventManager\";\nimport { createElement } from \"./createElement\";\nimport { normalizeVNode } from \"./normalizeVNode\";\nimport { updateElement } from \"./updateElement\";\n\nexport function renderElement(vNode, container) {\n  // 최초 렌더링시에는 createElement로 DOM을 생성하고\n  // 이후에는 updateElement로 기존 DOM을 업데이트한다.\n  // 렌더링이 완료되면 container에 이벤트를 등록한다.\n\n  const normalizedVNode = normalizeVNode(vNode);\n\n  if (!container.__oldVNode) {\n    const $el = createElement(normalizedVNode);\n    container.appendChild($el); // 최초 렌더링 시 DOM 생성\n  } else {\n    const oldVNode = container.__oldVNode;\n    updateElement(container, normalizedVNode, oldVNode);\n  }\n\n  container.__oldVNode = normalizedVNode;\n\n  // 이벤트 주입\n  setupEventListeners(container);\n}\n","const 초 = 1000;\r\nconst 분 = 초 * 60;\r\nconst 시간 = 분 * 60;\r\nconst 일 = 시간 * 24;\r\n\r\nexport const toTimeFormat = (time) => {\r\n  const diff = Date.now() - time;\r\n  if (diff < 분) {\r\n    return \"방금 전\";\r\n  }\r\n\r\n  if (diff < 시간) {\r\n    return `${Math.floor(diff / 분)}분 전`;\r\n  }\r\n\r\n  if (diff < 일) {\r\n    return `${Math.floor(diff / 시간)}시간 전`;\r\n  }\r\n\r\n  return new Date(time).toLocaleString();\r\n};\r\n","/** @jsx createVNode */\r\nimport { createVNode } from \"../../lib\";\r\nimport { toTimeFormat } from \"../../utils/index.js\";\r\n\r\nexport const Post = ({\r\n  author,\r\n  time,\r\n  content,\r\n  likeUsers,\r\n  activationLike = false,\r\n}) => {\r\n  return (\r\n    <div className=\"bg-white rounded-lg shadow p-4 mb-4\">\r\n      <div className=\"flex items-center mb-2\">\r\n        <div>\r\n          <div className=\"font-bold\">{author}</div>\r\n          <div className=\"text-gray-500 text-sm\">{toTimeFormat(time)}</div>\r\n        </div>\r\n      </div>\r\n      <p>{content}</p>\r\n      <div className=\"mt-2 flex justify-between text-gray-500\">\r\n        <span\r\n          className={`like-button cursor-pointer${activationLike ? \" text-blue-500\" : \"\"}`}\r\n        >\r\n          좋아요 {likeUsers.length}\r\n        </span>\r\n        <span>댓글</span>\r\n        <span>공유</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","/** @jsx createVNode */\r\nimport { createVNode } from \"../../lib\";\r\n\r\nexport const PostForm = () => {\r\n  return (\r\n    <div className=\"mb-4 bg-white rounded-lg shadow p-4\">\r\n      <textarea\r\n        id=\"post-content\"\r\n        placeholder=\"무슨 생각을 하고 계신가요?\"\r\n        className=\"w-full p-2 border rounded\"\r\n      />\r\n      <button\r\n        id=\"post-submit\"\r\n        className=\"mt-2 bg-blue-600 text-white px-4 py-2 rounded\"\r\n      >\r\n        게시\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","/** @jsx createVNode */\r\nimport { createVNode } from \"../../lib\";\r\n\r\nexport const Header = () => {\r\n  return (\r\n    <header className=\"bg-blue-600 text-white p-4 sticky top-0\">\r\n      <h1 className=\"text-2xl font-bold\">항해플러스</h1>\r\n    </header>\r\n  );\r\n};\r\n","/** @jsx createVNode */\r\nimport { createVNode } from \"../../lib\";\r\n\r\nexport const Footer = () => (\r\n  <footer className=\"bg-gray-200 p-4 text-center\">\r\n    <p>&copy; ${new Date().getFullYear()} 항해플러스. All rights reserved.</p>\r\n  </footer>\r\n);\r\n","export const router = {\r\n  value: null,\r\n  get() {\r\n    return this.value;\r\n  },\r\n  set(newValue) {\r\n    this.value = newValue;\r\n  },\r\n};\r\n","import { createStorage } from \"../lib\";\r\n\r\nexport const userStorage = createStorage(\"user\");\r\n","import { createStore } from \"../lib\";\r\nimport { userStorage } from \"../storages\";\r\n\r\nconst 초 = 1000;\r\nconst 분 = 초 * 60;\r\nconst 시간 = 분 * 60;\r\n\r\nexport const globalStore = createStore(\r\n  {\r\n    currentUser: userStorage.get(),\r\n    loggedIn: Boolean(userStorage.get()),\r\n    posts: [\r\n      {\r\n        id: 1,\r\n        author: \"홍길동\",\r\n        time: Date.now() - 5 * 분,\r\n        content: \"오늘 날씨가 정말 좋네요. 다들 좋은 하루 보내세요!\",\r\n        likeUsers: [],\r\n      },\r\n      {\r\n        id: 2,\r\n        author: \"김철수\",\r\n        time: Date.now() - 15 * 분,\r\n        content: \"새로운 프로젝트를 시작했어요. 열심히 코딩 중입니다!\",\r\n        likeUsers: [],\r\n      },\r\n      {\r\n        id: 3,\r\n        author: \"이영희\",\r\n        time: Date.now() - 30 * 분,\r\n        content: \"오늘 점심 메뉴 추천 받습니다. 뭐가 좋을까요?\",\r\n        likeUsers: [],\r\n      },\r\n      {\r\n        id: 4,\r\n        author: \"박민수\",\r\n        time: Date.now() - 30 * 분,\r\n        content: \"주말에 등산 가실 분 계신가요? 함께 가요!\",\r\n        likeUsers: [],\r\n      },\r\n      {\r\n        id: 5,\r\n        author: \"정수연\",\r\n        time: Date.now() - 2 * 시간,\r\n        content: \"새로 나온 영화 재미있대요. 같이 보러 갈 사람?\",\r\n        likeUsers: [],\r\n      },\r\n    ],\r\n    error: null,\r\n  },\r\n  {\r\n    logout(state) {\r\n      userStorage.reset();\r\n      return { ...state, currentUser: null, loggedIn: false };\r\n    },\r\n  },\r\n);\r\n","/** @jsx createVNode */\r\nimport { createVNode } from \"../../lib\";\r\nimport { router } from \"../../router\";\r\nimport { globalStore } from \"../../stores\";\r\n\r\nconst getNavItemClass = (path) => {\r\n  const currentPath = window.location.pathname;\r\n  return currentPath === path ? \"text-blue-600 font-bold\" : \"text-gray-600\";\r\n};\r\n\r\nfunction Link({ onClick, children, ...props }) {\r\n  const handleClick = (e) => {\r\n    e.preventDefault();\r\n    onClick?.();\r\n    router.get().push(e.target.href.replace(window.location.origin, \"\"));\r\n  };\r\n  return (\r\n    <a onClick={handleClick} {...props}>\r\n      {children}\r\n    </a>\r\n  );\r\n}\r\n\r\nexport const Navigation = () => {\r\n  const { loggedIn } = globalStore.getState();\r\n  const { logout } = globalStore.actions;\r\n  return (\r\n    <nav className=\"bg-white shadow-md p-2 sticky top-14\">\r\n      <ul className=\"flex justify-around\">\r\n        <li>\r\n          <Link href=\"/\" className={getNavItemClass(\"/\")}>\r\n            홈\r\n          </Link>\r\n        </li>\r\n        {!loggedIn && (\r\n          <li>\r\n            <Link href=\"/login\" className={getNavItemClass(\"/login\")}>\r\n              로그인\r\n            </Link>\r\n          </li>\r\n        )}\r\n        {loggedIn && (\r\n          <li>\r\n            <Link href=\"/profile\" className={getNavItemClass(\"/profile\")}>\r\n              프로필\r\n            </Link>\r\n          </li>\r\n        )}\r\n        {loggedIn && (\r\n          <li>\r\n            <a\r\n              href=\"#\"\r\n              id=\"logout\"\r\n              className=\"text-gray-600\"\r\n              onClick={(e) => {\r\n                e.preventDefault();\r\n                logout();\r\n              }}\r\n            >\r\n              로그아웃\r\n            </a>\r\n          </li>\r\n        )}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n","/** @jsx createVNode */\r\nimport { createVNode } from \"../lib\";\r\n\r\nimport { Footer, Header, Navigation, Post, PostForm } from \"../components\";\r\nimport { globalStore } from \"../stores\";\r\n\r\n/**\r\n * 심화과제\r\n * - 로그인한 사용자는 게시물을 추가할 수 있다.\r\n * - 로그인한 사용자는 게시물에 좋아요를 누를 수 있다.\r\n * - 로그인하지 않은 사용자가 게시물에 좋아요를 누를 경우, \"로그인 후 이용해주세요\"를 alert로 띄운다.\r\n */\r\nexport const HomePage = () => {\r\n  const { posts } = globalStore.getState();\r\n\r\n  return (\r\n    <div className=\"bg-gray-100 min-h-screen flex justify-center\">\r\n      <div className=\"max-w-md w-full\">\r\n        <Header />\r\n        <Navigation />\r\n\r\n        <main className=\"p-4\">\r\n          <PostForm />\r\n          <div id=\"posts-container\" className=\"space-y-4\">\r\n            {[...posts]\r\n              .sort((a, b) => b.time - a.time)\r\n              .map((props) => {\r\n                return <Post {...props} activationLike={false} />;\r\n              })}\r\n          </div>\r\n        </main>\r\n\r\n        <Footer />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","/** @jsx createVNode */\nimport { createVNode } from \"../lib\";\nimport { globalStore } from \"../stores\";\nimport { userStorage } from \"../storages\";\n\nfunction login(username) {\n  const user = { username, email: \"\", bio: \"\" };\n  globalStore.setState({\n    currentUser: user,\n    loggedIn: true,\n  });\n  userStorage.set(user);\n}\n\nexport const LoginPage = () => {\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // const username = document.getElementById(\"username\")?.value || \"\";\n    const username = document.getElementById(\"username\")?.value;\n    if (!username) {\n      return;\n    }\n    login(username);\n  };\n\n  return (\n    <div className=\"bg-gray-100 flex items-center justify-center min-h-screen\">\n      <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\">\n        <h1 className=\"text-2xl font-bold text-center text-blue-600 mb-8\">\n          항해플러스\n        </h1>\n        <form id=\"login-form\" onSubmit={handleSubmit}>\n          <input\n            type=\"text\"\n            id=\"username\"\n            placeholder=\"사용자 이름\"\n            className=\"w-full p-2 mb-4 border rounded\"\n            required\n          />\n          <input\n            type=\"password\"\n            placeholder=\"비밀번호\"\n            className=\"w-full p-2 mb-6 border rounded\"\n            required\n          />\n          <button\n            type=\"submit\"\n            className=\"w-full bg-blue-600 text-white p-2 rounded\"\n          >\n            로그인\n          </button>\n        </form>\n        <div className=\"mt-4 text-center\">\n          <a href=\"#\" className=\"text-blue-600 text-sm\">\n            비밀번호를 잊으셨나요?\n          </a>\n        </div>\n        <hr className=\"my-6\" />\n        <div className=\"text-center\">\n          <button className=\"bg-green-500 text-white px-4 py-2 rounded\">\n            새 계정 만들기\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n","/** @jsx createVNode */\r\nimport { createVNode } from \"../lib\";\r\n\r\nexport const NotFoundPage = () => (\r\n  <main className=\"bg-gray-100 flex items-center justify-center min-h-screen\">\r\n    <div\r\n      className=\"bg-white p-8 rounded-lg shadow-md w-full text-center\"\r\n      style=\"max-width: 480px\"\r\n    >\r\n      <h1 className=\"text-2xl font-bold text-blue-600 mb-4\">항해플러스</h1>\r\n      <p className=\"text-4xl font-bold text-gray-800 mb-4\">404</p>\r\n      <p className=\"text-xl text-gray-600 mb-8\">페이지를 찾을 수 없습니다</p>\r\n      <p className=\"text-gray-600 mb-8\">\r\n        요청하신 페이지가 존재하지 않거나 이동되었을 수 있습니다.\r\n      </p>\r\n      <a\r\n        href=\"/\"\r\n        data-link=\"\"\r\n        className=\"bg-blue-600 text-white px-4 py-2 rounded font-bold\"\r\n      >\r\n        홈으로 돌아가기\r\n      </a>\r\n    </div>\r\n  </main>\r\n);\r\n","/** @jsx createVNode */\r\nimport { createVNode } from \"../lib\";\r\nimport { Footer, Header, Navigation } from \"../components\";\r\nimport { globalStore } from \"../stores\";\r\nimport { userStorage } from \"../storages\";\r\n\r\nfunction updateProfile(profile) {\r\n  const user = { ...globalStore.getState().currentUser, ...profile };\r\n  globalStore.setState({ currentUser: user });\r\n  userStorage.set(user);\r\n  alert(\"프로필이 업데이트되었습니다.\");\r\n}\r\n\r\nexport const ProfilePage = () => {\r\n  const { loggedIn, currentUser } = globalStore.getState();\r\n  const { username = \"\", email = \"\", bio = \"\" } = currentUser ?? {};\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData(e.target);\r\n    const updatedProfile = Object.fromEntries(formData);\r\n    updateProfile(updatedProfile);\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-gray-100 min-h-screen flex justify-center\">\r\n      <div className=\"max-w-md w-full\">\r\n        <Header />\r\n        <Navigation loggedIn={loggedIn} />\r\n\r\n        <main className=\"p-4\">\r\n          <div className=\"bg-white p-8 rounded-lg shadow-md\">\r\n            <h2 className=\"text-2xl font-bold text-center text-blue-600 mb-8\">\r\n              내 프로필\r\n            </h2>\r\n            <form id=\"profile-form\" onSubmit={handleSubmit}>\r\n              <div className=\"mb-4\">\r\n                <label\r\n                  for=\"username\"\r\n                  className=\"block text-gray-700 text-sm font-bold mb-2\"\r\n                >\r\n                  사용자 이름\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"username\"\r\n                  name=\"username\"\r\n                  className=\"w-full p-2 border rounded\"\r\n                  value={username}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"mb-4\">\r\n                <label\r\n                  for=\"email\"\r\n                  className=\"block text-gray-700 text-sm font-bold mb-2\"\r\n                >\r\n                  이메일\r\n                </label>\r\n                <input\r\n                  type=\"email\"\r\n                  id=\"email\"\r\n                  name=\"email\"\r\n                  className=\"w-full p-2 border rounded\"\r\n                  value={email}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"mb-6\">\r\n                <label\r\n                  for=\"bio\"\r\n                  className=\"block text-gray-700 text-sm font-bold mb-2\"\r\n                >\r\n                  자기소개\r\n                </label>\r\n                <textarea\r\n                  id=\"bio\"\r\n                  name=\"bio\"\r\n                  rows=\"4\"\r\n                  className=\"w-full p-2 border rounded\"\r\n                >\r\n                  {bio}\r\n                </textarea>\r\n              </div>\r\n              <button\r\n                type=\"submit\"\r\n                className=\"w-full bg-blue-600 text-white p-2 rounded font-bold\"\r\n              >\r\n                프로필 업데이트\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </main>\r\n\r\n        <Footer />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","export class ForbiddenError extends Error {\r\n  static MESSAGE = \"ForbiddenError\";\r\n\r\n  constructor() {\r\n    super(ForbiddenError.MESSAGE);\r\n  }\r\n}\r\n","export class UnauthorizedError extends Error {\r\n  static MESSAGE = \"UnauthorizedError\";\r\n\r\n  constructor() {\r\n    super(UnauthorizedError.MESSAGE);\r\n  }\r\n}\r\n","/** @jsx createVNode */\r\n// 초기화 함수\r\nimport { router } from \"./router\";\r\nimport { ForbiddenError, UnauthorizedError } from \"./errors\";\r\nimport { renderElement, createVNode } from \"./lib\";\r\nimport { NotFoundPage } from \"./pages\";\r\n\r\nexport function render() {\r\n  const Page = router.get().getTarget() ?? NotFoundPage;\r\n  const $root = document.querySelector(\"#root\");\r\n\r\n  try {\r\n    renderElement(<Page />, $root);\r\n  } catch (error) {\r\n    if (error instanceof ForbiddenError) {\r\n      router.get().push(\"/\");\r\n      return;\r\n    }\r\n    if (error instanceof UnauthorizedError) {\r\n      router.get().push(\"/login\");\r\n      return;\r\n    }\r\n    console.error(error);\r\n  }\r\n}\r\n"],"names":["createObserver","listeners","fn","listener","createStore","initialState","initialActions","subscribe","notify","state","setState","newState","getState","actions","key","value","args","createStorage","storage","createVNode","type","props","children","filteredChildren","item","eventStore","rootStore","setupEventListeners","root","eventType","depthMap","element","handler","_a","eventHandler","e","rootDepthMap","addEvent","removeEvent","rootData","createElement","vNode","$fragmenet","v","$el","updateAttributes","child","$child","event","normalizeVNode","normalizedChildren","target","newProps","oldProps","attr","updateElement","parentElement","newNode","oldNode","index","maxLength","i","renderElement","container","normalizedVNode","oldVNode","초","분","시간","일","toTimeFormat","time","diff","Post","author","content","likeUsers","activationLike","PostForm","Header","Footer","router","newValue","userStorage","globalStore","getNavItemClass","path","Link","onClick","Navigation","loggedIn","logout","HomePage","posts","a","b","login","username","user","LoginPage","NotFoundPage","updateProfile","profile","ProfilePage","currentUser","email","bio","formData","updatedProfile","_ForbiddenError","__publicField","ForbiddenError","_UnauthorizedError","UnauthorizedError","render","Page","$root","error"],"mappings":"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"}